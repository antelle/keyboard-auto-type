#include "x11-keysym-map.h"

#include <algorithm>
#include <array>

namespace keyboard_auto_type {

// This mapping is generated by x11-keysyms.js
// Format: 0xXXXX'YYYY where
//    XXXX = Unicode code point
//    YYYY = KeySym
static constexpr std::array CHAR_MAP_16{
    0x0020'0020, 0x0021'0021, 0x0022'0022, 0x0023'0023, 0x0024'0024, 0x0025'0025, 0x0026'0026,
    0x0027'0027, 0x0028'0028, 0x0029'0029, 0x002a'002a, 0x002b'002b, 0x002c'002c, 0x002d'002d,
    0x002e'0abd, 0x002f'002f, 0x0030'0030, 0x0031'0031, 0x0032'0032, 0x0033'0033, 0x0034'0034,
    0x0035'0035, 0x0036'0036, 0x0037'0037, 0x0038'0038, 0x0039'0039, 0x003a'003a, 0x003b'003b,
    0x003c'0ba3, 0x003d'003d, 0x003e'0ba6, 0x003f'003f, 0x0040'0040, 0x0041'0041, 0x0042'0042,
    0x0043'0043, 0x0044'0044, 0x0045'0045, 0x0046'0046, 0x0047'0047, 0x0048'0048, 0x0049'0049,
    0x004a'004a, 0x004b'004b, 0x004c'004c, 0x004d'004d, 0x004e'004e, 0x004f'004f, 0x0050'0050,
    0x0051'0051, 0x0052'0052, 0x0053'0053, 0x0054'0054, 0x0055'0055, 0x0056'0056, 0x0057'0057,
    0x0058'0058, 0x0059'0059, 0x005a'005a, 0x005b'005b, 0x005c'005c, 0x005d'005d, 0x005e'005e,
    0x005f'0bc6, 0x0060'0060, 0x0061'0061, 0x0062'0062, 0x0063'0063, 0x0064'0064, 0x0065'0065,
    0x0066'0066, 0x0067'0067, 0x0068'0068, 0x0069'0069, 0x006a'006a, 0x006b'006b, 0x006c'006c,
    0x006d'006d, 0x006e'006e, 0x006f'006f, 0x0070'0070, 0x0071'0071, 0x0072'0072, 0x0073'0073,
    0x0074'0074, 0x0075'0075, 0x0076'0076, 0x0077'0077, 0x0078'0078, 0x0079'0079, 0x007a'007a,
    0x007b'007b, 0x007c'007c, 0x007d'007d, 0x007e'007e, 0x00a0'00a0, 0x00a1'00a1, 0x00a2'00a2,
    0x00a3'00a3, 0x00a4'00a4, 0x00a5'00a5, 0x00a6'00a6, 0x00a7'00a7, 0x00a8'00a8, 0x00a9'00a9,
    0x00aa'00aa, 0x00ab'00ab, 0x00ac'00ac, 0x00ad'00ad, 0x00ae'00ae, 0x00af'0bc0, 0x00b0'00b0,
    0x00b1'00b1, 0x00b2'00b2, 0x00b3'00b3, 0x00b4'00b4, 0x00b5'00b5, 0x00b6'00b6, 0x00b7'00b7,
    0x00b8'00b8, 0x00b9'00b9, 0x00ba'00ba, 0x00bb'00bb, 0x00bc'00bc, 0x00bd'00bd, 0x00be'00be,
    0x00bf'00bf, 0x00c0'00c0, 0x00c1'00c1, 0x00c2'00c2, 0x00c3'00c3, 0x00c4'00c4, 0x00c5'00c5,
    0x00c6'00c6, 0x00c7'00c7, 0x00c8'00c8, 0x00c9'00c9, 0x00ca'00ca, 0x00cb'00cb, 0x00cc'00cc,
    0x00cd'00cd, 0x00ce'00ce, 0x00cf'00cf, 0x00d0'00d0, 0x00d1'00d1, 0x00d2'00d2, 0x00d3'00d3,
    0x00d4'00d4, 0x00d5'00d5, 0x00d6'00d6, 0x00d7'00d7, 0x00d8'00d8, 0x00d9'00d9, 0x00da'00da,
    0x00db'00db, 0x00dc'00dc, 0x00dd'00dd, 0x00de'00de, 0x00df'00df, 0x00e0'00e0, 0x00e1'00e1,
    0x00e2'00e2, 0x00e3'00e3, 0x00e4'00e4, 0x00e5'00e5, 0x00e6'00e6, 0x00e7'00e7, 0x00e8'00e8,
    0x00e9'00e9, 0x00ea'00ea, 0x00eb'00eb, 0x00ec'00ec, 0x00ed'00ed, 0x00ee'00ee, 0x00ef'00ef,
    0x00f0'00f0, 0x00f1'00f1, 0x00f2'00f2, 0x00f3'00f3, 0x00f4'00f4, 0x00f5'00f5, 0x00f6'00f6,
    0x00f7'00f7, 0x00f8'00f8, 0x00f9'00f9, 0x00fa'00fa, 0x00fb'00fb, 0x00fc'00fc, 0x00fd'00fd,
    0x00fe'00fe, 0x00ff'00ff, 0x0100'03c0, 0x0101'03e0, 0x0102'01c3, 0x0103'01e3, 0x0104'01a1,
    0x0105'01b1, 0x0106'01c6, 0x0107'01e6, 0x0108'02c6, 0x0109'02e6, 0x010a'02c5, 0x010b'02e5,
    0x010c'01c8, 0x010d'01e8, 0x010e'01cf, 0x010f'01ef, 0x0110'01d0, 0x0111'01f0, 0x0112'03aa,
    0x0113'03ba, 0x0116'03cc, 0x0117'03ec, 0x0118'01ca, 0x0119'01ea, 0x011a'01cc, 0x011b'01ec,
    0x011c'02d8, 0x011d'02f8, 0x011e'02ab, 0x011f'02bb, 0x0120'02d5, 0x0121'02f5, 0x0122'03ab,
    0x0123'03bb, 0x0124'02a6, 0x0125'02b6, 0x0126'02a1, 0x0127'02b1, 0x0128'03a5, 0x0129'03b5,
    0x012a'03cf, 0x012b'03ef, 0x012e'03c7, 0x012f'03e7, 0x0130'02a9, 0x0131'02b9, 0x0134'02ac,
    0x0135'02bc, 0x0136'03d3, 0x0137'03f3, 0x0138'03a2, 0x0139'01c5, 0x013a'01e5, 0x013b'03a6,
    0x013c'03b6, 0x013d'01a5, 0x013e'01b5, 0x0141'01a3, 0x0142'01b3, 0x0143'01d1, 0x0144'01f1,
    0x0145'03d1, 0x0146'03f1, 0x0147'01d2, 0x0148'01f2, 0x014a'03bd, 0x014b'03bf, 0x014c'03d2,
    0x014d'03f2, 0x0150'01d5, 0x0151'01f5, 0x0152'13bc, 0x0153'13bd, 0x0154'01c0, 0x0155'01e0,
    0x0156'03a3, 0x0157'03b3, 0x0158'01d8, 0x0159'01f8, 0x015a'01a6, 0x015b'01b6, 0x015c'02de,
    0x015d'02fe, 0x015e'01aa, 0x015f'01ba, 0x0160'01a9, 0x0161'01b9, 0x0162'01de, 0x0163'01fe,
    0x0164'01ab, 0x0165'01bb, 0x0166'03ac, 0x0167'03bc, 0x0168'03dd, 0x0169'03fd, 0x016a'03de,
    0x016b'03fe, 0x016c'02dd, 0x016d'02fd, 0x016e'01d9, 0x016f'01f9, 0x0170'01db, 0x0171'01fb,
    0x0172'03d9, 0x0173'03f9, 0x0178'13be, 0x0179'01ac, 0x017a'01bc, 0x017b'01af, 0x017c'01bf,
    0x017d'01ae, 0x017e'01be, 0x0192'08f6, 0x02c7'01b7, 0x02d8'01a2, 0x02d9'01ff, 0x02db'01b2,
    0x02dd'01bd, 0x0385'07ae, 0x0386'07a1, 0x0388'07a2, 0x0389'07a3, 0x038a'07a4, 0x038c'07a7,
    0x038e'07a8, 0x038f'07ab, 0x0390'07b6, 0x0391'07c1, 0x0392'07c2, 0x0393'07c3, 0x0394'07c4,
    0x0395'07c5, 0x0396'07c6, 0x0397'07c7, 0x0398'07c8, 0x0399'07c9, 0x039a'07ca, 0x039b'07cb,
    0x039c'07cc, 0x039d'07cd, 0x039e'07ce, 0x039f'07cf, 0x03a0'07d0, 0x03a1'07d1, 0x03a3'07d2,
    0x03a4'07d4, 0x03a5'07d5, 0x03a6'07d6, 0x03a7'07d7, 0x03a8'07d8, 0x03a9'07d9, 0x03aa'07a5,
    0x03ab'07a9, 0x03ac'07b1, 0x03ad'07b2, 0x03ae'07b3, 0x03af'07b4, 0x03b0'07ba, 0x03b1'07e1,
    0x03b2'07e2, 0x03b3'07e3, 0x03b4'07e4, 0x03b5'07e5, 0x03b6'07e6, 0x03b7'07e7, 0x03b8'07e8,
    0x03b9'07e9, 0x03ba'07ea, 0x03bb'07eb, 0x03bc'07ec, 0x03bd'07ed, 0x03be'07ee, 0x03bf'07ef,
    0x03c0'07f0, 0x03c1'07f1, 0x03c2'07f3, 0x03c3'07f2, 0x03c4'07f4, 0x03c5'07f5, 0x03c6'07f6,
    0x03c7'07f7, 0x03c8'07f8, 0x03c9'07f9, 0x03ca'07b5, 0x03cb'07b9, 0x03cc'07b7, 0x03cd'07b8,
    0x03ce'07bb, 0x0401'06b3, 0x0402'06b1, 0x0403'06b2, 0x0404'06b4, 0x0405'06b5, 0x0406'06b6,
    0x0407'06b7, 0x0408'06b8, 0x0409'06b9, 0x040a'06ba, 0x040b'06bb, 0x040c'06bc, 0x040e'06be,
    0x040f'06bf, 0x0410'06e1, 0x0411'06e2, 0x0412'06f7, 0x0413'06e7, 0x0414'06e4, 0x0415'06e5,
    0x0416'06f6, 0x0417'06fa, 0x0418'06e9, 0x0419'06ea, 0x041a'06eb, 0x041b'06ec, 0x041c'06ed,
    0x041d'06ee, 0x041e'06ef, 0x041f'06f0, 0x0420'06f2, 0x0421'06f3, 0x0422'06f4, 0x0423'06f5,
    0x0424'06e6, 0x0425'06e8, 0x0426'06e3, 0x0427'06fe, 0x0428'06fb, 0x0429'06fd, 0x042a'06ff,
    0x042b'06f9, 0x042c'06f8, 0x042d'06fc, 0x042e'06e0, 0x042f'06f1, 0x0430'06c1, 0x0431'06c2,
    0x0432'06d7, 0x0433'06c7, 0x0434'06c4, 0x0435'06c5, 0x0436'06d6, 0x0437'06da, 0x0438'06c9,
    0x0439'06ca, 0x043a'06cb, 0x043b'06cc, 0x043c'06cd, 0x043d'06ce, 0x043e'06cf, 0x043f'06d0,
    0x0440'06d2, 0x0441'06d3, 0x0442'06d4, 0x0443'06d5, 0x0444'06c6, 0x0445'06c8, 0x0446'06c3,
    0x0447'06de, 0x0448'06db, 0x0449'06dd, 0x044a'06df, 0x044b'06d9, 0x044c'06d8, 0x044d'06dc,
    0x044e'06c0, 0x044f'06d1, 0x0451'06a3, 0x0452'06a1, 0x0453'06a2, 0x0454'06a4, 0x0455'06a5,
    0x0456'06a6, 0x0457'06a7, 0x0458'06a8, 0x0459'06a9, 0x045a'06aa, 0x045b'06ab, 0x045c'06ac,
    0x045e'06ae, 0x045f'06af, 0x0490'06bd, 0x0491'06ad, 0x05d0'0ce0, 0x05d1'0ce1, 0x05d2'0ce2,
    0x05d3'0ce3, 0x05d4'0ce4, 0x05d5'0ce5, 0x05d6'0ce6, 0x05d7'0ce7, 0x05d8'0ce8, 0x05d9'0ce9,
    0x05da'0cea, 0x05db'0ceb, 0x05dc'0cec, 0x05dd'0ced, 0x05de'0cee, 0x05df'0cef, 0x05e0'0cf0,
    0x05e1'0cf1, 0x05e2'0cf2, 0x05e3'0cf3, 0x05e4'0cf4, 0x05e5'0cf5, 0x05e6'0cf6, 0x05e7'0cf7,
    0x05e8'0cf8, 0x05e9'0cf9, 0x05ea'0cfa, 0x060c'05ac, 0x061b'05bb, 0x061f'05bf, 0x0621'05c1,
    0x0622'05c2, 0x0623'05c3, 0x0624'05c4, 0x0625'05c5, 0x0626'05c6, 0x0627'05c7, 0x0628'05c8,
    0x0629'05c9, 0x062a'05ca, 0x062b'05cb, 0x062c'05cc, 0x062d'05cd, 0x062e'05ce, 0x062f'05cf,
    0x0630'05d0, 0x0631'05d1, 0x0632'05d2, 0x0633'05d3, 0x0634'05d4, 0x0635'05d5, 0x0636'05d6,
    0x0637'05d7, 0x0638'05d8, 0x0639'05d9, 0x063a'05da, 0x0640'05e0, 0x0641'05e1, 0x0642'05e2,
    0x0643'05e3, 0x0644'05e4, 0x0645'05e5, 0x0646'05e6, 0x0647'05e7, 0x0648'05e8, 0x0649'05e9,
    0x064a'05ea, 0x064b'05eb, 0x064c'05ec, 0x064d'05ed, 0x064e'05ee, 0x064f'05ef, 0x0650'05f0,
    0x0651'05f1, 0x0652'05f2, 0x0e01'0da1, 0x0e02'0da2, 0x0e03'0da3, 0x0e04'0da4, 0x0e05'0da5,
    0x0e06'0da6, 0x0e07'0da7, 0x0e08'0da8, 0x0e09'0da9, 0x0e0a'0daa, 0x0e0b'0dab, 0x0e0c'0dac,
    0x0e0d'0dad, 0x0e0e'0dae, 0x0e0f'0daf, 0x0e10'0db0, 0x0e11'0db1, 0x0e12'0db2, 0x0e13'0db3,
    0x0e14'0db4, 0x0e15'0db5, 0x0e16'0db6, 0x0e17'0db7, 0x0e18'0db8, 0x0e19'0db9, 0x0e1a'0dba,
    0x0e1b'0dbb, 0x0e1c'0dbc, 0x0e1d'0dbd, 0x0e1e'0dbe, 0x0e1f'0dbf, 0x0e20'0dc0, 0x0e21'0dc1,
    0x0e22'0dc2, 0x0e23'0dc3, 0x0e24'0dc4, 0x0e25'0dc5, 0x0e26'0dc6, 0x0e27'0dc7, 0x0e28'0dc8,
    0x0e29'0dc9, 0x0e2a'0dca, 0x0e2b'0dcb, 0x0e2c'0dcc, 0x0e2d'0dcd, 0x0e2e'0dce, 0x0e2f'0dcf,
    0x0e30'0dd0, 0x0e31'0dd1, 0x0e32'0dd2, 0x0e33'0dd3, 0x0e34'0dd4, 0x0e35'0dd5, 0x0e36'0dd6,
    0x0e37'0dd7, 0x0e38'0dd8, 0x0e39'0dd9, 0x0e3a'0dda, 0x0e3f'0ddf, 0x0e40'0de0, 0x0e41'0de1,
    0x0e42'0de2, 0x0e43'0de3, 0x0e44'0de4, 0x0e45'0de5, 0x0e46'0de6, 0x0e47'0de7, 0x0e48'0de8,
    0x0e49'0de9, 0x0e4a'0dea, 0x0e4b'0deb, 0x0e4c'0dec, 0x0e4d'0ded, 0x0e50'0df0, 0x0e51'0df1,
    0x0e52'0df2, 0x0e53'0df3, 0x0e54'0df4, 0x0e55'0df5, 0x0e56'0df6, 0x0e57'0df7, 0x0e58'0df8,
    0x0e59'0df9, 0x11a8'0ed4, 0x11a9'0ed5, 0x11aa'0ed6, 0x11ab'0ed7, 0x11ac'0ed8, 0x11ad'0ed9,
    0x11ae'0eda, 0x11af'0edb, 0x11b0'0edc, 0x11b1'0edd, 0x11b2'0ede, 0x11b3'0edf, 0x11b4'0ee0,
    0x11b5'0ee1, 0x11b6'0ee2, 0x11b7'0ee3, 0x11b8'0ee4, 0x11b9'0ee5, 0x11ba'0ee6, 0x11bb'0ee7,
    0x11bc'0ee8, 0x11bd'0ee9, 0x11be'0eea, 0x11bf'0eeb, 0x11c0'0eec, 0x11c1'0eed, 0x11c2'0eee,
    0x11eb'0ef8, 0x11f0'0ef9, 0x11f9'0efa, 0x2002'0aa2, 0x2003'0aa1, 0x2004'0aa3, 0x2005'0aa4,
    0x2007'0aa5, 0x2008'0aa6, 0x2009'0aa7, 0x200a'0aa8, 0x2012'0abb, 0x2013'0aaa, 0x2014'0aa9,
    0x2015'07af, 0x2017'0cdf, 0x2018'0ad0, 0x2019'0ad1, 0x201a'0afd, 0x201c'0ad2, 0x201d'0ad3,
    0x201e'0afe, 0x2020'0af1, 0x2021'0af2, 0x2022'0ae6, 0x2025'0aaf, 0x2026'0aae, 0x2030'0ad5,
    0x2032'0ad6, 0x2033'0ad7, 0x2038'0afc, 0x203e'047e, 0x20a9'0eff, 0x20ac'20ac, 0x2105'0ab8,
    0x2116'06b0, 0x2117'0afb, 0x211e'0ad4, 0x2122'0ac9, 0x2153'0ab0, 0x2154'0ab1, 0x2155'0ab2,
    0x2156'0ab3, 0x2157'0ab4, 0x2158'0ab5, 0x2159'0ab6, 0x215a'0ab7, 0x215b'0ac3, 0x215c'0ac4,
    0x215d'0ac5, 0x215e'0ac6, 0x2190'08fb, 0x2191'08fc, 0x2192'08fd, 0x2193'08fe, 0x21d2'08ce,
    0x21d4'08cd, 0x2202'08ef, 0x2207'08c5, 0x2218'0bca, 0x221a'08d6, 0x221d'08c1, 0x221e'08c2,
    0x2227'0ba9, 0x2228'0ba8, 0x2229'0bc3, 0x222a'0bd6, 0x222b'08bf, 0x2234'08c0, 0x223c'08c8,
    0x2243'08c9, 0x2260'08bd, 0x2261'08cf, 0x2264'08bc, 0x2265'08be, 0x2282'0bda, 0x2283'0bd8,
    0x22a2'0bfc, 0x22a3'0bdc, 0x22a4'0bc2, 0x22a5'0bce, 0x2308'0bd3, 0x230a'0bc4, 0x2315'0afa,
    0x2320'08a4, 0x2321'08a5, 0x2329'0abc, 0x232a'0abe, 0x2395'0bcc, 0x239b'08ab, 0x239d'08ac,
    0x239e'08ad, 0x23a0'08ae, 0x23a1'08a7, 0x23a3'08a8, 0x23a4'08a9, 0x23a6'08aa, 0x23a8'08af,
    0x23ac'08b0, 0x23b7'08a1, 0x23ba'09ef, 0x23bb'09f0, 0x23bc'09f2, 0x23bd'09f3, 0x2409'09e2,
    0x240a'09e5, 0x240b'09e9, 0x240c'09e3, 0x240d'09e4, 0x2423'0aac, 0x2424'09e8, 0x2500'09f1,
    0x2502'09f8, 0x250c'09ec, 0x2510'09eb, 0x2514'09ed, 0x2518'09ea, 0x251c'09f4, 0x2524'09f5,
    0x252c'09f7, 0x2534'09f6, 0x253c'09ee, 0x2592'09e1, 0x25aa'0ae7, 0x25ab'0ae1, 0x25ac'0adb,
    0x25ad'0ae2, 0x25ae'0adf, 0x25af'0acf, 0x25b2'0ae8, 0x25b3'0ae3, 0x25b6'0add, 0x25b7'0acd,
    0x25bc'0ae9, 0x25bd'0ae4, 0x25c0'0adc, 0x25c1'0acc, 0x25c6'09e0, 0x25cb'0bcf, 0x25cf'0ade,
    0x25e6'0ae0, 0x2606'0ae5, 0x260e'0af9, 0x2613'0aca, 0x261c'0aea, 0x261e'0aeb, 0x2640'0af8,
    0x2642'0af7, 0x2663'0aec, 0x2665'0aee, 0x2666'0aed, 0x266d'0af6, 0x266f'0af5, 0x2713'0af3,
    0x2717'0af4, 0x271d'0ad9, 0x2720'0af0, 0x3001'04a4, 0x3002'04a1, 0x300c'04a2, 0x300d'04a3,
    0x309b'04de, 0x309c'04df, 0x30a1'04a7, 0x30a2'04b1, 0x30a3'04a8, 0x30a4'04b2, 0x30a5'04a9,
    0x30a6'04b3, 0x30a7'04aa, 0x30a8'04b4, 0x30a9'04ab, 0x30aa'04b5, 0x30ab'04b6, 0x30ad'04b7,
    0x30af'04b8, 0x30b1'04b9, 0x30b3'04ba, 0x30b5'04bb, 0x30b7'04bc, 0x30b9'04bd, 0x30bb'04be,
    0x30bd'04bf, 0x30bf'04c0, 0x30c1'04c1, 0x30c3'04af, 0x30c4'04c2, 0x30c6'04c3, 0x30c8'04c4,
    0x30ca'04c5, 0x30cb'04c6, 0x30cc'04c7, 0x30cd'04c8, 0x30ce'04c9, 0x30cf'04ca, 0x30d2'04cb,
    0x30d5'04cc, 0x30d8'04cd, 0x30db'04ce, 0x30de'04cf, 0x30df'04d0, 0x30e0'04d1, 0x30e1'04d2,
    0x30e2'04d3, 0x30e3'04ac, 0x30e4'04d4, 0x30e5'04ad, 0x30e6'04d5, 0x30e7'04ae, 0x30e8'04d6,
    0x30e9'04d7, 0x30ea'04d8, 0x30eb'04d9, 0x30ec'04da, 0x30ed'04db, 0x30ef'04dc, 0x30f2'04a6,
    0x30f3'04dd, 0x30fb'04a5, 0x30fc'04b0, 0x3131'0ea1, 0x3132'0ea2, 0x3133'0ea3, 0x3134'0ea4,
    0x3135'0ea5, 0x3136'0ea6, 0x3137'0ea7, 0x3138'0ea8, 0x3139'0ea9, 0x313a'0eaa, 0x313b'0eab,
    0x313c'0eac, 0x313d'0ead, 0x313e'0eae, 0x313f'0eaf, 0x3140'0eb0, 0x3141'0eb1, 0x3142'0eb2,
    0x3143'0eb3, 0x3144'0eb4, 0x3145'0eb5, 0x3146'0eb6, 0x3147'0eb7, 0x3148'0eb8, 0x3149'0eb9,
    0x314a'0eba, 0x314b'0ebb, 0x314c'0ebc, 0x314d'0ebd, 0x314e'0ebe, 0x314f'0ebf, 0x3150'0ec0,
    0x3151'0ec1, 0x3152'0ec2, 0x3153'0ec3, 0x3154'0ec4, 0x3155'0ec5, 0x3156'0ec6, 0x3157'0ec7,
    0x3158'0ec8, 0x3159'0ec9, 0x315a'0eca, 0x315b'0ecb, 0x315c'0ecc, 0x315d'0ecd, 0x315e'0ece,
    0x315f'0ecf, 0x3160'0ed0, 0x3161'0ed1, 0x3162'0ed2, 0x3163'0ed3, 0x316d'0eef, 0x3171'0ef0,
    0x3178'0ef1, 0x317f'0ef2, 0x3181'0ef3, 0x3184'0ef4, 0x3186'0ef5, 0x318d'0ef6, 0x318e'0ef7};

// This mapping is generated by x11-keysyms.js
// Format: 0xXXXXXXXX'YYYYYYYY where
//    XXXXXXXX = Unicode code point
//    YYYYYYYY = KeySym
static constexpr std::array CHAR_MAP_32{0x00002245'01002248};

constexpr auto MIN_CHAR_IN_CHAR_MAP_16 = CHAR_MAP_16.front() >> 16;
constexpr auto MAX_CHAR_IN_CHAR_MAP_16 = CHAR_MAP_16.back() >> 16;
constexpr auto MIN_CHAR_IN_CHAR_MAP_32 = CHAR_MAP_32.front() >> 16;
constexpr auto MAX_CHAR_IN_CHAR_MAP_32 = CHAR_MAP_32.back() >> 16;
constexpr auto ADD_CODEPOINT = 0x1'000'000;

uint32_t char_to_keysym(char32_t ch) {
    if (ch >= MIN_CHAR_IN_CHAR_MAP_32 && ch <= MAX_CHAR_IN_CHAR_MAP_32) {
        auto found_in_32 = std::find_if(CHAR_MAP_32.begin(), CHAR_MAP_32.end(),
                                        [ch](auto val) { return val >> 32 == ch; });
        if (found_in_32 != CHAR_MAP_32.end()) {
            return *found_in_32 & std::numeric_limits<uint32_t>::max();
        }
    }

    if (ch >= MIN_CHAR_IN_CHAR_MAP_16 && ch <= MAX_CHAR_IN_CHAR_MAP_16) {
        auto search_val = ch << 16;
        auto found = std::upper_bound(CHAR_MAP_16.begin(), CHAR_MAP_16.end(), search_val);
        if (found != CHAR_MAP_16.end()) {
            return *found & std::numeric_limits<uint16_t>::max();
        }
    }

    return ADD_CODEPOINT + ch;
}

} // namespace keyboard_auto_type

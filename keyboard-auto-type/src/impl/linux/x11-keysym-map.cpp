#include "x11-keysym-map.h"

#include <X11/keysym.h>

#include <algorithm>
#include <array>

namespace keyboard_auto_type {

// This mapping is generated by x11-keysyms.js
// Format: 0xXXXX'YYYYU where
//    XXXX = Unicode code point
//    YYYY = KeySym
constexpr std::array CHAR_MAP_16{
    0x0020'0020U, 0x0021'0021U, 0x0022'0022U, 0x0023'0023U, 0x0024'0024U, 0x0025'0025U,
    0x0026'0026U, 0x0027'0027U, 0x0028'0028U, 0x0029'0029U, 0x002a'002aU, 0x002b'002bU,
    0x002c'002cU, 0x002d'002dU, 0x002e'0abdU, 0x002f'002fU, 0x0030'0030U, 0x0031'0031U,
    0x0032'0032U, 0x0033'0033U, 0x0034'0034U, 0x0035'0035U, 0x0036'0036U, 0x0037'0037U,
    0x0038'0038U, 0x0039'0039U, 0x003a'003aU, 0x003b'003bU, 0x003c'0ba3U, 0x003d'003dU,
    0x003e'0ba6U, 0x003f'003fU, 0x0040'0040U, 0x0041'0041U, 0x0042'0042U, 0x0043'0043U,
    0x0044'0044U, 0x0045'0045U, 0x0046'0046U, 0x0047'0047U, 0x0048'0048U, 0x0049'0049U,
    0x004a'004aU, 0x004b'004bU, 0x004c'004cU, 0x004d'004dU, 0x004e'004eU, 0x004f'004fU,
    0x0050'0050U, 0x0051'0051U, 0x0052'0052U, 0x0053'0053U, 0x0054'0054U, 0x0055'0055U,
    0x0056'0056U, 0x0057'0057U, 0x0058'0058U, 0x0059'0059U, 0x005a'005aU, 0x005b'005bU,
    0x005c'005cU, 0x005d'005dU, 0x005e'005eU, 0x005f'0bc6U, 0x0060'0060U, 0x0061'0061U,
    0x0062'0062U, 0x0063'0063U, 0x0064'0064U, 0x0065'0065U, 0x0066'0066U, 0x0067'0067U,
    0x0068'0068U, 0x0069'0069U, 0x006a'006aU, 0x006b'006bU, 0x006c'006cU, 0x006d'006dU,
    0x006e'006eU, 0x006f'006fU, 0x0070'0070U, 0x0071'0071U, 0x0072'0072U, 0x0073'0073U,
    0x0074'0074U, 0x0075'0075U, 0x0076'0076U, 0x0077'0077U, 0x0078'0078U, 0x0079'0079U,
    0x007a'007aU, 0x007b'007bU, 0x007c'007cU, 0x007d'007dU, 0x007e'007eU, 0x00a0'00a0U,
    0x00a1'00a1U, 0x00a2'00a2U, 0x00a3'00a3U, 0x00a4'00a4U, 0x00a5'00a5U, 0x00a6'00a6U,
    0x00a7'00a7U, 0x00a8'00a8U, 0x00a9'00a9U, 0x00aa'00aaU, 0x00ab'00abU, 0x00ac'00acU,
    0x00ad'00adU, 0x00ae'00aeU, 0x00af'0bc0U, 0x00b0'00b0U, 0x00b1'00b1U, 0x00b2'00b2U,
    0x00b3'00b3U, 0x00b4'00b4U, 0x00b5'00b5U, 0x00b6'00b6U, 0x00b7'00b7U, 0x00b8'00b8U,
    0x00b9'00b9U, 0x00ba'00baU, 0x00bb'00bbU, 0x00bc'00bcU, 0x00bd'00bdU, 0x00be'00beU,
    0x00bf'00bfU, 0x00c0'00c0U, 0x00c1'00c1U, 0x00c2'00c2U, 0x00c3'00c3U, 0x00c4'00c4U,
    0x00c5'00c5U, 0x00c6'00c6U, 0x00c7'00c7U, 0x00c8'00c8U, 0x00c9'00c9U, 0x00ca'00caU,
    0x00cb'00cbU, 0x00cc'00ccU, 0x00cd'00cdU, 0x00ce'00ceU, 0x00cf'00cfU, 0x00d0'00d0U,
    0x00d1'00d1U, 0x00d2'00d2U, 0x00d3'00d3U, 0x00d4'00d4U, 0x00d5'00d5U, 0x00d6'00d6U,
    0x00d7'00d7U, 0x00d8'00d8U, 0x00d9'00d9U, 0x00da'00daU, 0x00db'00dbU, 0x00dc'00dcU,
    0x00dd'00ddU, 0x00de'00deU, 0x00df'00dfU, 0x00e0'00e0U, 0x00e1'00e1U, 0x00e2'00e2U,
    0x00e3'00e3U, 0x00e4'00e4U, 0x00e5'00e5U, 0x00e6'00e6U, 0x00e7'00e7U, 0x00e8'00e8U,
    0x00e9'00e9U, 0x00ea'00eaU, 0x00eb'00ebU, 0x00ec'00ecU, 0x00ed'00edU, 0x00ee'00eeU,
    0x00ef'00efU, 0x00f0'00f0U, 0x00f1'00f1U, 0x00f2'00f2U, 0x00f3'00f3U, 0x00f4'00f4U,
    0x00f5'00f5U, 0x00f6'00f6U, 0x00f7'00f7U, 0x00f8'00f8U, 0x00f9'00f9U, 0x00fa'00faU,
    0x00fb'00fbU, 0x00fc'00fcU, 0x00fd'00fdU, 0x00fe'00feU, 0x00ff'00ffU, 0x0100'03c0U,
    0x0101'03e0U, 0x0102'01c3U, 0x0103'01e3U, 0x0104'01a1U, 0x0105'01b1U, 0x0106'01c6U,
    0x0107'01e6U, 0x0108'02c6U, 0x0109'02e6U, 0x010a'02c5U, 0x010b'02e5U, 0x010c'01c8U,
    0x010d'01e8U, 0x010e'01cfU, 0x010f'01efU, 0x0110'01d0U, 0x0111'01f0U, 0x0112'03aaU,
    0x0113'03baU, 0x0116'03ccU, 0x0117'03ecU, 0x0118'01caU, 0x0119'01eaU, 0x011a'01ccU,
    0x011b'01ecU, 0x011c'02d8U, 0x011d'02f8U, 0x011e'02abU, 0x011f'02bbU, 0x0120'02d5U,
    0x0121'02f5U, 0x0122'03abU, 0x0123'03bbU, 0x0124'02a6U, 0x0125'02b6U, 0x0126'02a1U,
    0x0127'02b1U, 0x0128'03a5U, 0x0129'03b5U, 0x012a'03cfU, 0x012b'03efU, 0x012e'03c7U,
    0x012f'03e7U, 0x0130'02a9U, 0x0131'02b9U, 0x0134'02acU, 0x0135'02bcU, 0x0136'03d3U,
    0x0137'03f3U, 0x0138'03a2U, 0x0139'01c5U, 0x013a'01e5U, 0x013b'03a6U, 0x013c'03b6U,
    0x013d'01a5U, 0x013e'01b5U, 0x0141'01a3U, 0x0142'01b3U, 0x0143'01d1U, 0x0144'01f1U,
    0x0145'03d1U, 0x0146'03f1U, 0x0147'01d2U, 0x0148'01f2U, 0x014a'03bdU, 0x014b'03bfU,
    0x014c'03d2U, 0x014d'03f2U, 0x0150'01d5U, 0x0151'01f5U, 0x0152'13bcU, 0x0153'13bdU,
    0x0154'01c0U, 0x0155'01e0U, 0x0156'03a3U, 0x0157'03b3U, 0x0158'01d8U, 0x0159'01f8U,
    0x015a'01a6U, 0x015b'01b6U, 0x015c'02deU, 0x015d'02feU, 0x015e'01aaU, 0x015f'01baU,
    0x0160'01a9U, 0x0161'01b9U, 0x0162'01deU, 0x0163'01feU, 0x0164'01abU, 0x0165'01bbU,
    0x0166'03acU, 0x0167'03bcU, 0x0168'03ddU, 0x0169'03fdU, 0x016a'03deU, 0x016b'03feU,
    0x016c'02ddU, 0x016d'02fdU, 0x016e'01d9U, 0x016f'01f9U, 0x0170'01dbU, 0x0171'01fbU,
    0x0172'03d9U, 0x0173'03f9U, 0x0178'13beU, 0x0179'01acU, 0x017a'01bcU, 0x017b'01afU,
    0x017c'01bfU, 0x017d'01aeU, 0x017e'01beU, 0x0192'08f6U, 0x02c7'01b7U, 0x02d8'01a2U,
    0x02d9'01ffU, 0x02db'01b2U, 0x02dd'01bdU, 0x0385'07aeU, 0x0386'07a1U, 0x0388'07a2U,
    0x0389'07a3U, 0x038a'07a4U, 0x038c'07a7U, 0x038e'07a8U, 0x038f'07abU, 0x0390'07b6U,
    0x0391'07c1U, 0x0392'07c2U, 0x0393'07c3U, 0x0394'07c4U, 0x0395'07c5U, 0x0396'07c6U,
    0x0397'07c7U, 0x0398'07c8U, 0x0399'07c9U, 0x039a'07caU, 0x039b'07cbU, 0x039c'07ccU,
    0x039d'07cdU, 0x039e'07ceU, 0x039f'07cfU, 0x03a0'07d0U, 0x03a1'07d1U, 0x03a3'07d2U,
    0x03a4'07d4U, 0x03a5'07d5U, 0x03a6'07d6U, 0x03a7'07d7U, 0x03a8'07d8U, 0x03a9'07d9U,
    0x03aa'07a5U, 0x03ab'07a9U, 0x03ac'07b1U, 0x03ad'07b2U, 0x03ae'07b3U, 0x03af'07b4U,
    0x03b0'07baU, 0x03b1'07e1U, 0x03b2'07e2U, 0x03b3'07e3U, 0x03b4'07e4U, 0x03b5'07e5U,
    0x03b6'07e6U, 0x03b7'07e7U, 0x03b8'07e8U, 0x03b9'07e9U, 0x03ba'07eaU, 0x03bb'07ebU,
    0x03bc'07ecU, 0x03bd'07edU, 0x03be'07eeU, 0x03bf'07efU, 0x03c0'07f0U, 0x03c1'07f1U,
    0x03c2'07f3U, 0x03c3'07f2U, 0x03c4'07f4U, 0x03c5'07f5U, 0x03c6'07f6U, 0x03c7'07f7U,
    0x03c8'07f8U, 0x03c9'07f9U, 0x03ca'07b5U, 0x03cb'07b9U, 0x03cc'07b7U, 0x03cd'07b8U,
    0x03ce'07bbU, 0x0401'06b3U, 0x0402'06b1U, 0x0403'06b2U, 0x0404'06b4U, 0x0405'06b5U,
    0x0406'06b6U, 0x0407'06b7U, 0x0408'06b8U, 0x0409'06b9U, 0x040a'06baU, 0x040b'06bbU,
    0x040c'06bcU, 0x040e'06beU, 0x040f'06bfU, 0x0410'06e1U, 0x0411'06e2U, 0x0412'06f7U,
    0x0413'06e7U, 0x0414'06e4U, 0x0415'06e5U, 0x0416'06f6U, 0x0417'06faU, 0x0418'06e9U,
    0x0419'06eaU, 0x041a'06ebU, 0x041b'06ecU, 0x041c'06edU, 0x041d'06eeU, 0x041e'06efU,
    0x041f'06f0U, 0x0420'06f2U, 0x0421'06f3U, 0x0422'06f4U, 0x0423'06f5U, 0x0424'06e6U,
    0x0425'06e8U, 0x0426'06e3U, 0x0427'06feU, 0x0428'06fbU, 0x0429'06fdU, 0x042a'06ffU,
    0x042b'06f9U, 0x042c'06f8U, 0x042d'06fcU, 0x042e'06e0U, 0x042f'06f1U, 0x0430'06c1U,
    0x0431'06c2U, 0x0432'06d7U, 0x0433'06c7U, 0x0434'06c4U, 0x0435'06c5U, 0x0436'06d6U,
    0x0437'06daU, 0x0438'06c9U, 0x0439'06caU, 0x043a'06cbU, 0x043b'06ccU, 0x043c'06cdU,
    0x043d'06ceU, 0x043e'06cfU, 0x043f'06d0U, 0x0440'06d2U, 0x0441'06d3U, 0x0442'06d4U,
    0x0443'06d5U, 0x0444'06c6U, 0x0445'06c8U, 0x0446'06c3U, 0x0447'06deU, 0x0448'06dbU,
    0x0449'06ddU, 0x044a'06dfU, 0x044b'06d9U, 0x044c'06d8U, 0x044d'06dcU, 0x044e'06c0U,
    0x044f'06d1U, 0x0451'06a3U, 0x0452'06a1U, 0x0453'06a2U, 0x0454'06a4U, 0x0455'06a5U,
    0x0456'06a6U, 0x0457'06a7U, 0x0458'06a8U, 0x0459'06a9U, 0x045a'06aaU, 0x045b'06abU,
    0x045c'06acU, 0x045e'06aeU, 0x045f'06afU, 0x0490'06bdU, 0x0491'06adU, 0x05d0'0ce0U,
    0x05d1'0ce1U, 0x05d2'0ce2U, 0x05d3'0ce3U, 0x05d4'0ce4U, 0x05d5'0ce5U, 0x05d6'0ce6U,
    0x05d7'0ce7U, 0x05d8'0ce8U, 0x05d9'0ce9U, 0x05da'0ceaU, 0x05db'0cebU, 0x05dc'0cecU,
    0x05dd'0cedU, 0x05de'0ceeU, 0x05df'0cefU, 0x05e0'0cf0U, 0x05e1'0cf1U, 0x05e2'0cf2U,
    0x05e3'0cf3U, 0x05e4'0cf4U, 0x05e5'0cf5U, 0x05e6'0cf6U, 0x05e7'0cf7U, 0x05e8'0cf8U,
    0x05e9'0cf9U, 0x05ea'0cfaU, 0x060c'05acU, 0x061b'05bbU, 0x061f'05bfU, 0x0621'05c1U,
    0x0622'05c2U, 0x0623'05c3U, 0x0624'05c4U, 0x0625'05c5U, 0x0626'05c6U, 0x0627'05c7U,
    0x0628'05c8U, 0x0629'05c9U, 0x062a'05caU, 0x062b'05cbU, 0x062c'05ccU, 0x062d'05cdU,
    0x062e'05ceU, 0x062f'05cfU, 0x0630'05d0U, 0x0631'05d1U, 0x0632'05d2U, 0x0633'05d3U,
    0x0634'05d4U, 0x0635'05d5U, 0x0636'05d6U, 0x0637'05d7U, 0x0638'05d8U, 0x0639'05d9U,
    0x063a'05daU, 0x0640'05e0U, 0x0641'05e1U, 0x0642'05e2U, 0x0643'05e3U, 0x0644'05e4U,
    0x0645'05e5U, 0x0646'05e6U, 0x0647'05e7U, 0x0648'05e8U, 0x0649'05e9U, 0x064a'05eaU,
    0x064b'05ebU, 0x064c'05ecU, 0x064d'05edU, 0x064e'05eeU, 0x064f'05efU, 0x0650'05f0U,
    0x0651'05f1U, 0x0652'05f2U, 0x0e01'0da1U, 0x0e02'0da2U, 0x0e03'0da3U, 0x0e04'0da4U,
    0x0e05'0da5U, 0x0e06'0da6U, 0x0e07'0da7U, 0x0e08'0da8U, 0x0e09'0da9U, 0x0e0a'0daaU,
    0x0e0b'0dabU, 0x0e0c'0dacU, 0x0e0d'0dadU, 0x0e0e'0daeU, 0x0e0f'0dafU, 0x0e10'0db0U,
    0x0e11'0db1U, 0x0e12'0db2U, 0x0e13'0db3U, 0x0e14'0db4U, 0x0e15'0db5U, 0x0e16'0db6U,
    0x0e17'0db7U, 0x0e18'0db8U, 0x0e19'0db9U, 0x0e1a'0dbaU, 0x0e1b'0dbbU, 0x0e1c'0dbcU,
    0x0e1d'0dbdU, 0x0e1e'0dbeU, 0x0e1f'0dbfU, 0x0e20'0dc0U, 0x0e21'0dc1U, 0x0e22'0dc2U,
    0x0e23'0dc3U, 0x0e24'0dc4U, 0x0e25'0dc5U, 0x0e26'0dc6U, 0x0e27'0dc7U, 0x0e28'0dc8U,
    0x0e29'0dc9U, 0x0e2a'0dcaU, 0x0e2b'0dcbU, 0x0e2c'0dccU, 0x0e2d'0dcdU, 0x0e2e'0dceU,
    0x0e2f'0dcfU, 0x0e30'0dd0U, 0x0e31'0dd1U, 0x0e32'0dd2U, 0x0e33'0dd3U, 0x0e34'0dd4U,
    0x0e35'0dd5U, 0x0e36'0dd6U, 0x0e37'0dd7U, 0x0e38'0dd8U, 0x0e39'0dd9U, 0x0e3a'0ddaU,
    0x0e3f'0ddfU, 0x0e40'0de0U, 0x0e41'0de1U, 0x0e42'0de2U, 0x0e43'0de3U, 0x0e44'0de4U,
    0x0e45'0de5U, 0x0e46'0de6U, 0x0e47'0de7U, 0x0e48'0de8U, 0x0e49'0de9U, 0x0e4a'0deaU,
    0x0e4b'0debU, 0x0e4c'0decU, 0x0e4d'0dedU, 0x0e50'0df0U, 0x0e51'0df1U, 0x0e52'0df2U,
    0x0e53'0df3U, 0x0e54'0df4U, 0x0e55'0df5U, 0x0e56'0df6U, 0x0e57'0df7U, 0x0e58'0df8U,
    0x0e59'0df9U, 0x11a8'0ed4U, 0x11a9'0ed5U, 0x11aa'0ed6U, 0x11ab'0ed7U, 0x11ac'0ed8U,
    0x11ad'0ed9U, 0x11ae'0edaU, 0x11af'0edbU, 0x11b0'0edcU, 0x11b1'0eddU, 0x11b2'0edeU,
    0x11b3'0edfU, 0x11b4'0ee0U, 0x11b5'0ee1U, 0x11b6'0ee2U, 0x11b7'0ee3U, 0x11b8'0ee4U,
    0x11b9'0ee5U, 0x11ba'0ee6U, 0x11bb'0ee7U, 0x11bc'0ee8U, 0x11bd'0ee9U, 0x11be'0eeaU,
    0x11bf'0eebU, 0x11c0'0eecU, 0x11c1'0eedU, 0x11c2'0eeeU, 0x11eb'0ef8U, 0x11f0'0ef9U,
    0x11f9'0efaU, 0x2002'0aa2U, 0x2003'0aa1U, 0x2004'0aa3U, 0x2005'0aa4U, 0x2007'0aa5U,
    0x2008'0aa6U, 0x2009'0aa7U, 0x200a'0aa8U, 0x2012'0abbU, 0x2013'0aaaU, 0x2014'0aa9U,
    0x2015'07afU, 0x2017'0cdfU, 0x2018'0ad0U, 0x2019'0ad1U, 0x201a'0afdU, 0x201c'0ad2U,
    0x201d'0ad3U, 0x201e'0afeU, 0x2020'0af1U, 0x2021'0af2U, 0x2022'0ae6U, 0x2025'0aafU,
    0x2026'0aaeU, 0x2030'0ad5U, 0x2032'0ad6U, 0x2033'0ad7U, 0x2038'0afcU, 0x203e'047eU,
    0x20a9'0effU, 0x20ac'20acU, 0x2105'0ab8U, 0x2116'06b0U, 0x2117'0afbU, 0x211e'0ad4U,
    0x2122'0ac9U, 0x2153'0ab0U, 0x2154'0ab1U, 0x2155'0ab2U, 0x2156'0ab3U, 0x2157'0ab4U,
    0x2158'0ab5U, 0x2159'0ab6U, 0x215a'0ab7U, 0x215b'0ac3U, 0x215c'0ac4U, 0x215d'0ac5U,
    0x215e'0ac6U, 0x2190'08fbU, 0x2191'08fcU, 0x2192'08fdU, 0x2193'08feU, 0x21d2'08ceU,
    0x21d4'08cdU, 0x2202'08efU, 0x2207'08c5U, 0x2218'0bcaU, 0x221a'08d6U, 0x221d'08c1U,
    0x221e'08c2U, 0x2227'0ba9U, 0x2228'0ba8U, 0x2229'0bc3U, 0x222a'0bd6U, 0x222b'08bfU,
    0x2234'08c0U, 0x223c'08c8U, 0x2243'08c9U, 0x2260'08bdU, 0x2261'08cfU, 0x2264'08bcU,
    0x2265'08beU, 0x2282'0bdaU, 0x2283'0bd8U, 0x22a2'0bfcU, 0x22a3'0bdcU, 0x22a4'0bc2U,
    0x22a5'0bceU, 0x2308'0bd3U, 0x230a'0bc4U, 0x2315'0afaU, 0x2320'08a4U, 0x2321'08a5U,
    0x2329'0abcU, 0x232a'0abeU, 0x2395'0bccU, 0x239b'08abU, 0x239d'08acU, 0x239e'08adU,
    0x23a0'08aeU, 0x23a1'08a7U, 0x23a3'08a8U, 0x23a4'08a9U, 0x23a6'08aaU, 0x23a8'08afU,
    0x23ac'08b0U, 0x23b7'08a1U, 0x23ba'09efU, 0x23bb'09f0U, 0x23bc'09f2U, 0x23bd'09f3U,
    0x2409'09e2U, 0x240a'09e5U, 0x240b'09e9U, 0x240c'09e3U, 0x240d'09e4U, 0x2423'0aacU,
    0x2424'09e8U, 0x2500'09f1U, 0x2502'09f8U, 0x250c'09ecU, 0x2510'09ebU, 0x2514'09edU,
    0x2518'09eaU, 0x251c'09f4U, 0x2524'09f5U, 0x252c'09f7U, 0x2534'09f6U, 0x253c'09eeU,
    0x2592'09e1U, 0x25aa'0ae7U, 0x25ab'0ae1U, 0x25ac'0adbU, 0x25ad'0ae2U, 0x25ae'0adfU,
    0x25af'0acfU, 0x25b2'0ae8U, 0x25b3'0ae3U, 0x25b6'0addU, 0x25b7'0acdU, 0x25bc'0ae9U,
    0x25bd'0ae4U, 0x25c0'0adcU, 0x25c1'0accU, 0x25c6'09e0U, 0x25cb'0bcfU, 0x25cf'0adeU,
    0x25e6'0ae0U, 0x2606'0ae5U, 0x260e'0af9U, 0x2613'0acaU, 0x261c'0aeaU, 0x261e'0aebU,
    0x2640'0af8U, 0x2642'0af7U, 0x2663'0aecU, 0x2665'0aeeU, 0x2666'0aedU, 0x266d'0af6U,
    0x266f'0af5U, 0x2713'0af3U, 0x2717'0af4U, 0x271d'0ad9U, 0x2720'0af0U, 0x3001'04a4U,
    0x3002'04a1U, 0x300c'04a2U, 0x300d'04a3U, 0x309b'04deU, 0x309c'04dfU, 0x30a1'04a7U,
    0x30a2'04b1U, 0x30a3'04a8U, 0x30a4'04b2U, 0x30a5'04a9U, 0x30a6'04b3U, 0x30a7'04aaU,
    0x30a8'04b4U, 0x30a9'04abU, 0x30aa'04b5U, 0x30ab'04b6U, 0x30ad'04b7U, 0x30af'04b8U,
    0x30b1'04b9U, 0x30b3'04baU, 0x30b5'04bbU, 0x30b7'04bcU, 0x30b9'04bdU, 0x30bb'04beU,
    0x30bd'04bfU, 0x30bf'04c0U, 0x30c1'04c1U, 0x30c3'04afU, 0x30c4'04c2U, 0x30c6'04c3U,
    0x30c8'04c4U, 0x30ca'04c5U, 0x30cb'04c6U, 0x30cc'04c7U, 0x30cd'04c8U, 0x30ce'04c9U,
    0x30cf'04caU, 0x30d2'04cbU, 0x30d5'04ccU, 0x30d8'04cdU, 0x30db'04ceU, 0x30de'04cfU,
    0x30df'04d0U, 0x30e0'04d1U, 0x30e1'04d2U, 0x30e2'04d3U, 0x30e3'04acU, 0x30e4'04d4U,
    0x30e5'04adU, 0x30e6'04d5U, 0x30e7'04aeU, 0x30e8'04d6U, 0x30e9'04d7U, 0x30ea'04d8U,
    0x30eb'04d9U, 0x30ec'04daU, 0x30ed'04dbU, 0x30ef'04dcU, 0x30f2'04a6U, 0x30f3'04ddU,
    0x30fb'04a5U, 0x30fc'04b0U, 0x3131'0ea1U, 0x3132'0ea2U, 0x3133'0ea3U, 0x3134'0ea4U,
    0x3135'0ea5U, 0x3136'0ea6U, 0x3137'0ea7U, 0x3138'0ea8U, 0x3139'0ea9U, 0x313a'0eaaU,
    0x313b'0eabU, 0x313c'0eacU, 0x313d'0eadU, 0x313e'0eaeU, 0x313f'0eafU, 0x3140'0eb0U,
    0x3141'0eb1U, 0x3142'0eb2U, 0x3143'0eb3U, 0x3144'0eb4U, 0x3145'0eb5U, 0x3146'0eb6U,
    0x3147'0eb7U, 0x3148'0eb8U, 0x3149'0eb9U, 0x314a'0ebaU, 0x314b'0ebbU, 0x314c'0ebcU,
    0x314d'0ebdU, 0x314e'0ebeU, 0x314f'0ebfU, 0x3150'0ec0U, 0x3151'0ec1U, 0x3152'0ec2U,
    0x3153'0ec3U, 0x3154'0ec4U, 0x3155'0ec5U, 0x3156'0ec6U, 0x3157'0ec7U, 0x3158'0ec8U,
    0x3159'0ec9U, 0x315a'0ecaU, 0x315b'0ecbU, 0x315c'0eccU, 0x315d'0ecdU, 0x315e'0eceU,
    0x315f'0ecfU, 0x3160'0ed0U, 0x3161'0ed1U, 0x3162'0ed2U, 0x3163'0ed3U, 0x316d'0eefU,
    0x3171'0ef0U, 0x3178'0ef1U, 0x317f'0ef2U, 0x3181'0ef3U, 0x3184'0ef4U, 0x3186'0ef5U,
    0x318d'0ef6U, 0x318e'0ef7U};

// This mapping is generated by x11-keysyms.js
// Format: 0xXXXXXXXX'YYYYYYYYU where
//    XXXXXXXX = Unicode code point
//    YYYYYYYY = KeySym
constexpr std::array CHAR_MAP_32{0x00002245'01002248U};

// Special printable characters in 0x00 .. 0x1F range
constexpr std::array CHAR_MAP_LOW{
    std::make_pair(U'\n', XK_Return),
    std::make_pair(U'\t', XK_Tab),
};

constexpr auto MIN_CHAR_IN_CHAR_MAP_16 = CHAR_MAP_16.front() >> 16;
constexpr auto MAX_CHAR_IN_CHAR_MAP_16 = CHAR_MAP_16.back() >> 16;
constexpr auto MIN_CHAR_IN_CHAR_MAP_32 = CHAR_MAP_32.front() >> 32;
constexpr auto MAX_CHAR_IN_CHAR_MAP_32 = CHAR_MAP_32.back() >> 32;
constexpr auto ADD_CODEPOINT = 0x1'000'000;
constexpr auto SHIFT_WORD = 16;
constexpr auto SHIFT_DWORD = 32;

uint32_t char_to_keysym(char32_t ch) {
    if (ch >= MIN_CHAR_IN_CHAR_MAP_32 && ch <= MAX_CHAR_IN_CHAR_MAP_32) {
        const auto *found_in_32 = std::find_if(CHAR_MAP_32.begin(), CHAR_MAP_32.end(),
                                               [ch](auto val) { return val >> SHIFT_DWORD == ch; });
        if (found_in_32 != CHAR_MAP_32.end() && *found_in_32 >> SHIFT_DWORD == ch) {
            return *found_in_32 & std::numeric_limits<uint32_t>::max();
        }
    }

    if (ch >= MIN_CHAR_IN_CHAR_MAP_16 && ch <= MAX_CHAR_IN_CHAR_MAP_16) {
        auto search_val = ch << SHIFT_WORD;
        const auto *found = std::upper_bound(CHAR_MAP_16.begin(), CHAR_MAP_16.end(), search_val);
        if (found != CHAR_MAP_16.end() && *found >> SHIFT_WORD == ch) {
            return *found & std::numeric_limits<uint16_t>::max();
        }
    }

    if (ch < MIN_CHAR_IN_CHAR_MAP_16) {
        for (auto [char_code, key_sym] : CHAR_MAP_LOW) {
            if (ch == char_code) {
                return key_sym;
            }
        }
        return 0;
    }

    return ADD_CODEPOINT + ch;
}

} // namespace keyboard_auto_type
